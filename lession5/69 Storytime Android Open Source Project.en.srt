1
00:00:00,520 --> 00:00:04,200
Andy Rubin，2013年带领Google's Android团队，
Andy Rubin, head of Google's Android team in 2013,

2
00:00:04,200 --> 00:00:07,540
在Twitter上发布Android's开放性这个著名定义，
famously defined Android's openness with this Tweet, offering the

3
00:00:07,540 --> 00:00:10,500
并提供下载和构建Android的源代码和指令。
instructions for downloading and building the Android source code.

4
00:00:11,840 --> 00:00:14,020
作为开发人员，这让我们很容易就看到幕后，
As app developers, it's handy to be able to peep

5
00:00:14,020 --> 00:00:16,530
看到这个框架是如何工作的。
behind the curtains and see how the framework actually

6
00:00:16,530 --> 00:00:19,070
而堆栈溢出则是找到答案的最佳途径。
works. And it's an excellent way to find answers to

7
00:00:19,070 --> 00:00:22,230
但是对于Android开源项目，
tricky, Stack Overflow questions. But the Android Open Source

8
00:00:22,230 --> 00:00:25,580
或者称为AOSP，它的功能远不止如此。
Project, or AOSP as its commonly known, is much more

9
00:00:25,580 --> 00:00:28,170
源代码是在Apache 2 协议下可用的，
than that. The source code is available under the

10
00:00:28,170 --> 00:00:31,000
所以任何人都可以开发它来实现做想做的事，
Apache 2 license, so anyone can take it and do

11
00:00:31,000 --> 00:00:34,290
包括在原有基础上修改和重构。
anything they want with it, including modifying it and redistributing

12
00:00:34,290 --> 00:00:37,830
Android一直都有由modders组成的充满激情的社区，
it. And they have. Android has always had a passionate

13
00:00:37,830 --> 00:00:40,945
Steve Kondik 和 Cyanogen 以及社会各界的XDA，
community of modders, from Steve Kondik and the Cyanogen community

14
00:00:40,945 --> 00:00:44,240
还有其他开发人员，一直在尝试、开发、发布，
to XDA and many others who have been distributing modified

15
00:00:44,240 --> 00:00:47,100
关于 Android手机端的图片修改。
images of Android for phone owners brave enough to try

16
00:00:47,100 --> 00:00:50,580
甚至在像亚马逊这样的大公司，都在用Android的源代码，
them. Even big companies like Amazon have taken the Android

17
00:00:50,580 --> 00:00:52,500
进行修改后投入自己的产品线使用。
source code and modified it for use in their own

18
00:00:52,500 --> 00:00:56,420
这种开放性的扩展已经体现到应用程序本身，
line of products. That openness extends to the apps themselves, the

19
00:00:56,420 --> 00:00:59,790
AOSP包括拨号程序、程序启动器、
AOSP includes key mobile apps like the dialer, app launcher,

20
00:00:59,790 --> 00:01:03,170
日历、邮件这类的核心应用程序。Google还为他们提供自己的版本。
calendar, and email. And Google offers it own versions of each

21
00:01:03,170 --> 00:01:06,000
在早期，程序与本地框架紧密结合，
as well. In the early days those native apps were

22
00:01:06,000 --> 00:01:08,870
只能在该平台更新。
tightly bound to the framework and could only get updated along

23
00:01:08,870 --> 00:01:12,170
无可否认，这是在初期，大概每隔几个星期更新一次。
with the platform. Which admittedly in the early days seemed like

24
00:01:12,170 --> 00:01:16,230
但是这个时间对于平台间的发行来说过长了，
every few weeks. But as the time between platform releases grew,

25
00:01:16,230 --> 00:01:18,860
所以将程序与平台解绑，而是通过
so did the efforts to unbundle those apps, allowing

26
00:01:18,860 --> 00:01:21,840
Google Play来发布更新。
them to be updated through Google Play. That was great

27
00:01:21,840 --> 00:01:23,670
这对用户来说，无疑是个好消息，
news for users, but it had an even better

28
00:01:23,670 --> 00:01:27,140
但是在开发人员看来却不是这样。
side effect for us developers. Because apps like Gmail and

29
00:01:27,140 --> 00:01:30,170
因为像Gmail和Maps这些应用程序依赖于一些谷歌专有的API，
Maps depend on a number of proprietary Google APIs,

30
00:01:30,170 --> 00:01:34,140
Google发布了Google Play服务。同时也以餐前点心命名，
Google released Google Play Services. Also code named after food

31
00:01:34,140 --> 00:01:36,920
用来支持Google应用程序，并且向开发人员开放API，
to support the Google apps, while also giving us

32
00:01:36,920 --> 00:01:41,850
像Maps, Wallet, Drive 和 YouTube。
developers Google specific APIs, like Maps, Wallet, Drive, and YouTube.

33
00:01:41,850 --> 00:01:44,480
所以现在我们会在每周六左右得到最新最好的Google特有的API。
So now we get the latest and greatest Google specific APIs

34
00:01:44,480 --> 00:01:47,110
而不是依赖于特定的平台，
every six weeks or so. And rather than being tied to

35
00:01:47,110 --> 00:01:51,540
它们可以在任意设备上使用，可以去了解一下android 2.3。
a specific platform, they're available on every device, back to Gingerbread.

36
00:01:51,540 --> 00:01:55,580
哦，当然，每一个原生应用程序也都可以替换。
Oh, and of course every native app is also entirely replaceable.

37
00:01:55,580 --> 00:01:57,830
所以你可以发布一些应用程序来取代设备自带的。
So you can publish apps to replace any of the apps

38
00:01:57,830 --> 00:02:00,490
我们也可以创建自己的SMS apps、
shipped with the device. And we can build our own SMS

39
00:02:00,490 --> 00:02:03,910
homescreens 和 maps apps，将它们公开在平台上，
apps, homescreens or maps apps, publish it on Play and give

40
00:02:03,910 --> 00:02:07,070
让用户自己选择使用。
users the choice to make it their default. When Android was first

41
00:02:07,070 --> 00:02:10,550
在Android第一次发布的时候，Andy Rubin是这样描述AOSP的，
announced, Andy Rubin described the AOSP as, all the software

42
00:02:10,550 --> 00:02:13,340
所以运行在手机上的软件没有没遇到过阻碍的，
to run a mobile phone but without the proprietary obstacles

43
00:02:13,340 --> 00:02:16,860
但从不会有能阻碍移动创新。
that have hindered mobile innovation. Today, Android runs on more

44
00:02:16,860 --> 00:02:19,580
现在，有不同的版本在移动端工作，但是它们的核心都是相同的。
than just mobiles, but the core of its purpose remains

45
00:02:19,580 --> 00:02:23,383
在一个平台系统上，允许模型、运营商、
the same. A platform and ecosystem that allows models, carriers,

46
00:02:23,383 --> 00:02:26,470
原始设备制造商以及应用程序开发人员一起创新和竞争。
OEMs and app developers to innovate and compete. So, armed

47
00:02:26,470 --> 00:02:29,560
所以，应当开放、不断发展和增长的Google API平台，
with an open, evolving platform enriched by a growing set

48
00:02:29,560 --> 00:02:32,380
同时提供功能丰富的应用程序，
of Google API's and the ability to create great apps

49
00:02:32,380 --> 00:02:34,470
让用户能够自己定制自己的用户体验，
that let users customize every aspect of

50
00:02:34,470 --> 00:02:37,270
你还能使用他人的工作成果，
their user experience, you can use other people's

51
00:02:37,270 --> 00:02:39,640
来开发确定以后的开放平台。
work to help define the computing platform of

52
00:02:39,640 --> 00:02:42,870
这就是我对开放的定义。
the future. And that's my definition of open.

