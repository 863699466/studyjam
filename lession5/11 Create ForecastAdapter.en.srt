1
00:00:00,270 --> 00:00:02,310
打开SunShine这个App，为我们的ForecastAdapter创建一个
Open up the Sunshine app. And we'll create a

2
00:00:02,310 --> 00:00:06,400
新的文件，他扩展了游标适配器。我们
new file for our ForecastAdapter, which extends CursorAdapter. We

3
00:00:06,400 --> 00:00:08,690
提供给你一个代码片段来开始
provided you with a gist of code to get started

4
00:00:08,690 --> 00:00:12,450
下面的部分。这些代码重载了newView方法，实例化了
below. The code overrides the newView method, where it inflates

5
00:00:12,450 --> 00:00:15,690
list_item_forecast布局XML。它同时提供了
the list_item_forecast layout XML. It also provides

6
00:00:15,690 --> 00:00:18,380
bindView方法的实现，从游标读取数据
an implementation for bindView, where it reads from the cursor,

7
00:00:18,380 --> 00:00:21,770
更新布局。举个例子，从游标看，我们
and updates the layout. For example, from the cursor, we

8
00:00:21,770 --> 00:00:25,470
读取了天气预报的描述，然后我们在列表项布局
read the weather forecast description. Then we go and find

9
00:00:25,470 --> 00:00:28,430
的视图层级中，找到与之对应的TextView。
the TextView for that within the view hierarchy of the

10
00:00:28,430 --> 00:00:30,975
我们通过ID
list item layout. We look for the TextView  with the id

11
00:00:30,975 --> 00:00:33,690
list_item_forecast_textview找到这个TextView。然后我们
list_item_forecast_textview. Then we update the

12
00:00:33,690 --> 00:00:35,990
用正确的描述 TextView。我们
textview with the right description. We

13
00:00:35,990 --> 00:00:38,630
也在代码里留下了一些to do。所以请你继续，
also left some to dos in the code. So, go ahead and

14
00:00:38,630 --> 00:00:41,420
复制整个文件，完成这些to do。
copy over the file and then finish the to dos. In

15
00:00:41,420 --> 00:00:44,928
当前实现中，所有的日期都是同样方式显示的。
the current implementation of the app, all dates are displayed the same.

16
00:00:44,928 --> 00:00:47,340
尽管是在线框里，你会发现我们有一个更为友好的
In the wireframes though, you'll notice that we have a more friendly

17
00:00:47,340 --> 00:00:50,670
日期格式。在代码片段中我们也包含了一些辅助函数还有
date format. In the gist we also included some helper methods and

18
00:00:50,670 --> 00:00:54,090
日期格式化用的字符串。这是由于在我们的当前
strings for date formatting. That's because in our current

19
00:00:54,090 --> 00:00:56,830
实现中，所有的日期都用相同的方式显示。
implementation, all the dates are displayed in the same way.

20
00:00:56,830 --> 00:01:00,036
尽管是在线框里，我们有一个更为友好的日期
In the wireframes though, we have a more friendly date

21
00:01:00,036 --> 00:01:05,620
类型，比如今天，明天，周三，周四等等。这里是
format. Such as today, tomorrow, Wednesday, Thursday, etc. Here's that

22
00:01:05,620 --> 00:01:07,680
要用辅助方法来实现友好的日期字符串的逻辑。
logic for what the helper method does to get the

23
00:01:07,680 --> 00:01:11,300
如果是在这周，会显示今天
friendly date string. If it's this week it says today,

24
00:01:11,300 --> 00:01:13,770
或者明天，或者这周的某一天。如果是
or tomorrow, or the day of the week. If it's

25
00:01:13,770 --> 00:01:15,900
一周以外，我们将会使用这样的格式：
more than a week out then we use the format

26
00:01:15,900 --> 00:01:19,220
周一，六月八日，等等。当你完成这些
Monday, June 8th and so on. Once you finish the

27
00:01:19,220 --> 00:01:22,280
to do并添加了辅助方法和字符串，
to dos and you added the helper methods and strings,

28
00:01:22,280 --> 00:01:25,110
接着用ForecastAdapter替换掉简单的游标适配器。
then go ahead and replace the simple CursorAdapter with

29
00:01:25,110 --> 00:01:28,660
在你编译并运行这个app之后，它会
a ForecastAdapter. After you compile and run the app it'll

30
00:01:28,660 --> 00:01:31,250
看上去和之前一样，只有一种列表项
look the same as before with only one list item

31
00:01:31,250 --> 00:01:34,870
视图类型类型显示出来，尽管现在已经在用ForecastAdapter，
view type shown, except now it's using a ForecastAdapter and

32
00:01:34,870 --> 00:01:37,220
并且现在有了更好的日期描述。我记得我
now it has better date descriptions. I know that I

33
00:01:37,220 --> 00:01:40,860
承诺过你们游标适配器可以处理多重项目视图类型
promised you that CursorAdapter could handle multiple item view types,

34
00:01:40,860 --> 00:01:42,170
所以我们将会在下一步继续进行。
so we'll do that in the next step.

