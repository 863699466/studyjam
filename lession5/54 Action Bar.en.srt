1
00:00:00,190 --> 00:00:02,450
之前，我们学过关于styles的内容和如何在一个独立的View中使用它们
Earlier, we learned about styles and how you can apply them

2
00:00:02,450 --> 00:00:05,420
如果你想把style应用到
to an individual View. If you want to apply it to

3
00:00:05,420 --> 00:00:08,270
整个activity或者应用程序
all of the views in an activity or application, you can

4
00:00:08,270 --> 00:00:11,330
你可以通过在manifest文件中设置activity或者应用程序的theme属性（主题）
do it by specifying a theme attribute on the activity or

5
00:00:11,330 --> 00:00:15,620
那么我们现在来修改actionbar，
application tag in the Android manifest. Now we style the action

6
00:00:15,620 --> 00:00:18,820
让它更接近我们的效果图。这是settings的actionbar
bar to look like these visual mocks. This is the settings,

7
00:00:18,820 --> 00:00:22,040
detail的 和 主要的activity的actionbar。对于所有这些actionbar
detail and main activity. For all cases, we want the background

8
00:00:22,040 --> 00:00:25,220
我们希望它们的背景都是这个蓝色值（十六进制）
color to be this blue hex color. Then we notice that the

9
00:00:25,220 --> 00:00:28,300
可以看出settings和detail的style非常相似
styling of the settings and detail activities look very similar.

10
00:00:28,300 --> 00:00:31,070
它们都有app的图标和activity的标题
They both have the app icon and the activity title. On

11
00:00:31,070 --> 00:00:33,670
而main activity只有logo在上面
the other hand, main activity just shows the logo. It's a

12
00:00:33,670 --> 00:00:36,740
这个logo和程序图标不同，之前它通过
different attribute than the app icon, and this was provided in

13
00:00:36,740 --> 00:00:41,840
asset来访问，资源名称是ic_logo。 由于这些相似点
asset drop earlier and it's called ic_logo. Because of these similarities,

14
00:00:41,840 --> 00:00:44,530
我们可以在这两个activity上使用相同的theme
we can use the same theme for these two activities and

15
00:00:44,530 --> 00:00:47,700
对于main activity，我们需要创建新的theme
we can create a new theme for the main activity. In

16
00:00:47,700 --> 00:00:50,450
在我们的程序中，我们在这用app主题，
the case of our app, we use app theme here and

17
00:00:50,450 --> 00:00:54,050
而在这我们用forecast主题。这些主题在style文件中进行修改
we use forecast theme here. We customize the themes in

18
00:00:54,050 --> 00:00:57,480
style文件在values文件夹中
the styles file in the base values folder. The app

19
00:00:57,480 --> 00:01:01,140
整个程序的主题继承自系统主题--DarkActionBar
theme inherits from the dark action bar system theme but

20
00:01:01,140 --> 00:01:04,040
不过我们在它的基础上进行了一定的修改来符合我们的需求
we override the action bar style to be our own.

21
00:01:04,040 --> 00:01:06,480
主题定义的代码在这里，我们设置了一个父类型作为它所继承的风格
This is defined here. We give it a parent ActionBar

22
00:01:06,480 --> 00:01:09,135
然后把背景颜色设置成sunshine_blue
style, and then we specify the background to be the

23
00:01:09,135 --> 00:01:11,970
记住这些应用会被用在settings和detail中
sunshine_blue color. Remember that this will be used in the

24
00:01:11,970 --> 00:01:15,480
对于main activity,
settings activity and the detail activity. Then for the main

25
00:01:15,480 --> 00:01:19,500
我们创建了一种theme叫ForecastTheme, 它继承自AppTheme, 因为这里可能需要
activity, we declare the ForecastTheme. We inherit from the AppTheme, in

26
00:01:19,500 --> 00:01:22,370
添加更多属性，继承AppTheme可以让我们的修改更加自由
case there's more attributes that got added here, and then we'll be

27
00:01:22,370 --> 00:01:24,990
我们在这里重写了actionbar的style。
able to inherit it for free. But we override the action bar

28
00:01:24,990 --> 00:01:28,110
因为main activity显示了logo，所以我们这里需要设置logo
style to be this one. We set the logo because that's displayed

29
00:01:28,110 --> 00:01:31,220
这里我们需要设置display options（显示选项）来
in the main activity, and we set the display options so

30
00:01:31,220 --> 00:01:33,880
显示logo。关于actionbar的显示选项，
that we can show the logo. For more information on the action

31
00:01:33,880 --> 00:01:37,790
你可以参考这个列表。为了能够向下兼容
bar display options, you can see the list here. For backward compatibility,

32
00:01:37,790 --> 00:01:40,680
我们需要找到actionbar的style值
we needed to find these action bar styles in the base values

33
00:01:40,680 --> 00:01:45,220
在values和value-V14文件夹中。在兼容库（support library）里对actionbar类的支持
folder as well in the values V14 folder. The action bar compact class in the

34
00:01:45,220 --> 00:01:47,570
可以一直向下兼容到honeycomb
support library handles action bar behavior up

35
00:01:47,570 --> 00:01:50,070
而对于ice cream sandwich以及更高版本的andorid
through honeycomb. And then for ice cream sandwich

36
00:01:50,070 --> 00:01:51,760
对actionbar的支持已经包含在基础的开发框架中
and above, it goes through the framework

37
00:01:51,760 --> 00:01:54,150
你可以
implementation of the action bar. You can see

38
00:01:54,150 --> 00:01:57,610
从下面两个文件中找到相关代码。把这些更新加到你的程序中吧！
the code for the two files below. Go ahead and make these two changes now.

