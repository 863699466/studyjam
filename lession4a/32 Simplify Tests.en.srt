1
00:00:00,210 --> 00:00:05,060
下面是我如何对测试代码进行精简的  我喜欢看到优秀的关于测试的想法
Here's how I ended up simplifying things. I'd love to see great testing ideas.

2
00:00:05,060 --> 00:00:08,540
如果你很喜欢你创造的测试代码  可以把它们发布到
So, if you're particular to what you've created, post your solution to

3
00:00:08,540 --> 00:00:13,280
论坛中  我要开始对测试代码进行一些重构的工作了
the forums. I'm starting off refactoring things a little bit. What I'm

4
00:00:13,280 --> 00:00:17,242
我会添加一个获取包含位置信息的ContentValues对象的方法
going to do is I'm going to add a function to get the location ContentValues.

5
00:00:17,242 --> 00:00:19,850
如果我们后面在其它地方使用到这些测试
This will be useful when we actually try to use these tests for

6
00:00:19,850 --> 00:00:23,650
这会很有用  大家看这里就是我们创建的可以获取
some other things later on. And there we are. A function that'll

7
00:00:23,650 --> 00:00:28,650
包含位置信息的ContentValues对象的方法  另外我要将城市名的变量定义在外面
return location content values. I'm also going to pull the city name out so

8
00:00:28,650 --> 00:00:33,690
这样后面就可以在一些验证步骤中使用到它  就像这样
we can use that for some validation steps later on. And there we are. It's now

9
00:00:33,690 --> 00:00:37,010
我们现在在测试方法中  我们可以直接调用刚才的方法来
inside of the function. And then we're simply going to call that function to

10
00:00:37,010 --> 00:00:40,680
获取包含位置信息的ContentValues对象  这些代码都可以删除了
get our location content values and we can delete all those lines of code.

11
00:00:40,680 --> 00:00:45,610
我之前说过这里的这些列的变量并不是很重要
Now, all of these columns, as I said before, are not very important, so

12
00:00:45,610 --> 00:00:50,360
所以我们可以删除掉  然后在查询的参数中传入null
we can delete them. And we can also null out the value in our query.

13
00:00:50,360 --> 00:00:53,674
我要做的下一件事是修改这个验证步骤  我们可以
The next thing I want to do is actually fix this validation step. What we can do

14
00:00:53,674 --> 00:00:57,866
根据从ContentValues对象中获取到的键值对的集合
is we can create a function that relies on the fact we can get the map and

15
00:00:57,866 --> 00:01:02,300
来创建一个方法  这样我们可以很容易的遍历它们
set from our content values. And then we can simply iterate through those.

16
00:01:02,300 --> 00:01:05,838
然后我们可以看到从cursor对象中返回的值是否和我们用来
Then we can see if the values that we used to create the record actually past

17
00:01:05,838 --> 00:01:10,410
创建记录的值是一样的  现在回到我们的测试中
the values in the cursor that are returned. Now, back to our test. So,

18
00:01:10,410 --> 00:01:16,105
现在这里有很多没有必要的代码  我们需要做的只是使用values和cursor
there's a lot of unnecessary code here now. All we have to do is call

19
00:01:16,105 --> 00:01:21,710
作为参数调用validateCursor()方法  好了  我们已经
validateCursor() with our values and our cursor. All right. So now we've

20
00:01:21,710 --> 00:01:25,850
改好了第一个测试  我们也可以对第二个测试做同样的事情
converted the first test. We can do the same thing with the second test as well.

21
00:01:25,850 --> 00:01:29,140
首先  让我们再做一遍之前所做的抽象的工作  当然了
First of all, let's do the same abstraction we did before. Now, of course,

22
00:01:29,140 --> 00:01:32,400
这里的这些值不会保持不变  所以我们直接添加这些值
one of these values isn't going to be static, so we have to add that in.

23
00:01:32,400 --> 00:01:39,250
现在我们可以这样做  把getWeatherContentValues()返回的对象赋给weatherValues变量
So now we can say, ContentValues equals getWeatherContentValues().

24
00:01:39,250 --> 00:01:45,240
参数传递的是非常重要的locationRowId  记住  表之间是相互关联的
With our all important locationRowId. Remember, our tables are linked.

25
00:01:45,240 --> 00:01:48,830
然后我们可以把这条数据插入数据库  再查询它
And then we can insert it into the database. Query for it.

26
00:01:48,830 --> 00:01:53,160
如果查询成功  我们就又可以通过weatherValues和weatherCursor作为参数调用
If the query is successful we can just call validateCursor() again on our

27
00:01:53,160 --> 00:01:58,620
validateCursor()方法  这样可以减少非常多的代码
weatherValues with our weatherCursor. So much less code.

28
00:01:58,620 --> 00:02:03,870
好了  我们的测试得到大大的精简
And that's it. Our test is vastly simplified and

29
00:02:03,870 --> 00:02:08,520
这会对后面的工作带来帮助  我们现在可以再次运行这个测试
it will be useful to us later on. So now we can try running this test again to

30
00:02:08,520 --> 00:02:13,318
看看它在重构以后还能不能正常工作  结果是测试通过了
see if it still works after the refactoring. And there we are, test passed. Now,

31
00:02:13,318 --> 00:02:15,710
也许多写一些代码可以帮助我们更好地
it'd probably be useful for us to actually print out some more data so

32
00:02:15,710 --> 00:02:19,340
观察测试的内容  但是  这次对测试的精简
we can see what was being tested. But, this simplification to our

33
00:02:19,340 --> 00:02:23,260
在我们进行后面的工作的时候会大有裨益  关于测试的部分我们还没有讲完
test is going to help us as we move forward. We're not done with testing yet.
