1
00:00:00,240 --> 00:00:04,900
在我们仔细研究这一章的内容之前  让我们再讲一下Android的数据存储和保持
Before we dive into the session material, let's talk a bit about storing or

2
00:00:04,900 --> 00:00:10,340
首先  为什么我们要关心数据保持呢
persisting data in Android. First of all, why do we bother to persist things

3
00:00:10,340 --> 00:00:15,290
这里是保存着数据的云端  我们为什么不能每次都从那儿读取数据呢
at all? This is the era of the connected cloud. Why don't we always fetch from

4
00:00:15,290 --> 00:00:20,220
当你打开应用时  你肯定不想每次都看到加载中的字样吧
there? It's really nice to not start the app and see, Loading, or, even worse,

5
00:00:20,220 --> 00:00:24,850
更加糟糕的是  像这样  一个空白的界面  你的应用启动的越快  用户也就会越多的使用它
like this, a blank screen. The faster people can use an app, the more it will be

6
00:00:24,850 --> 00:00:30,020
很明显  如果用户必须要选择刷新才能看到要显示的内容
used. Obviously, if one has to select Refresh, to get it to display anything,

7
00:00:30,020 --> 00:00:34,230
那实在是太糟糕了  保持数据的另一个原因是
that would be particularly bad. Another reason to persist our data,

8
00:00:34,230 --> 00:00:38,440
无线传输会减少电池的寿命
is that using any radio is detrimental to the battery life of the device,

9
00:00:38,440 --> 00:00:43,622
特别是蜂窝电话电磁波  很多时候  用户在两个基站区域之间或者
especially the cellular radio. Many users aren't on meter data plans or

10
00:00:43,622 --> 00:00:48,090
是在漫游状态时使用你的应用  读取数据
may be roaming when they want to use your app. All those unnecessary data

11
00:00:48,090 --> 00:00:52,460
会增加不必要的数据传输  还有很多地方没有网络连接
fetches can add up. There are still lots of places that don't have a network

12
00:00:52,460 --> 00:00:56,910
使用移动应用的一个主要的优势之一就是
connection available. One of the prime advantages of having a mobile app is

13
00:00:56,910 --> 00:01:02,310
它可以在网络状态不佳或者断网的时候继续使用
being resistant to bad or non-existent network conditions. After all,

14
00:01:02,310 --> 00:01:08,720
你不能预计用户什么时候使用你的应用  所以你可能希望
you never know where the user will want to use your app. As you might expect,

15
00:01:08,720 --> 00:01:11,590
Android能在文件系统中保存你的那些不变的数据
Android stores your persistent data in the file system.

16
00:01:12,600 --> 00:01:17,360
这些数据可以保存在内存中  作为你应用的私有数据
These files can be stored in internal storage that is private to your app.

17
00:01:17,360 --> 00:01:21,610
或保存到共享存储  或者保存在外部存储中
They can also be stored in shared or external storage. On older

18
00:01:21,610 --> 00:01:26,560
以前的Android设备  共享存储都是在外部存储卡中的
Android devices this shared storage was actually on an external memory card.

19
00:01:26,560 --> 00:01:30,620
目前  大多数Android设备都支持模拟共享存储
Today, most Android devices only emulate this card so that there is

20
00:01:30,620 --> 00:01:35,520
在设备上模拟共享的外部存储应用
the shared external storage apps need available on the device. Some Android

21
00:01:35,520 --> 00:01:39,948
有的设备支持模拟共享存储和第二块外存
devices have emulated shared storage and secondary external storage.

22
00:01:39,948 --> 00:01:45,763
Android 4.4 Kit Kat版本添加了一个API  可以让开发者访问第二块外存空间
Android 4.4 Kit Kat added an API to allow developers to access this secondary

23
00:01:45,763 --> 00:01:51,280
这节课  我们只是关注内存
external storage. We're going to focus on internal storage in this class.

24
00:01:51,280 --> 00:01:55,140
你可以看指导手册学习更多关于Android存储位置的知识
Check the instructor notes to learn more about Android storage locations.

25
00:01:56,200 --> 00:02:01,010
像我之前说的那样  Android在文件系统中保持数据
As I mentioned before, Android persists data into the file system.

26
00:02:01,010 --> 00:02:05,060
它在文件系统的顶层提供了两种方法  分别是
It does provide two functional layers on top of the file system in the form of

27
00:02:05,060 --> 00:02:10,350
共享参数Shared Preference和SQLite数据库  Shared Preference类提供了
shared preferences and SQLite. The Shared Preferences class provides a general

28
00:02:10,350 --> 00:02:14,440
保存和恢复数据键值对的方法
framework that allows you to save and retrieve persistent key value pairs of

29
00:02:14,440 --> 00:02:19,080
支持的数据类型有布尔型  浮点型  整型  长整型和字符串
primitive data types, such as booleans, floats, ints, longs and

30
00:02:19,080 --> 00:02:23,570
Shared Preference主要用于存储一些配置信息
strings. Shared Preferences is used by the Android preference activity to store

31
00:02:23,570 --> 00:02:29,740
如你的位置信息
our settings data such as the location. Why store things in a SQLite database?

32
00:02:29,740 --> 00:02:35,730
Andriod支持文件存储和Shared Preference  为什么要把数据存在SQLite数据库中呢
After all, Android supports both RAW files and Shared Preferences. For

33
00:02:35,730 --> 00:02:39,410
理由是一样的  为了提高访问数据的速度
the same reason that it's inefficient to find things if you throw your

34
00:02:39,410 --> 00:02:44,590
文件存储和Shared Preference查询数据就好像你在一堆散乱的堆放在地上的衣服中寻找其中的一件  这样效率是很低的
clothes in a pile on the floor. Storing things in an SQLite database helps

35
00:02:44,590 --> 00:02:49,730
SQLite数据库可以帮助我们组织数据  从而便于更快的查询数据  这主要要感谢索引表
you organize and find data easily, thanks to the power of indexing in tables.

36
00:02:49,730 --> 00:02:54,410
这是天气数据库中的一部分  一个SQLite数据库就是像这样的一个结构
An SQLite database looks something like this fragment from our weather database.

37
00:02:54,410 --> 00:02:59,090
注意  这里列出的并不是所有的字段
Note that not all fields are represented. We can perform queries using

38
00:02:59,090 --> 00:03:04,080
我们可以用SQL查询语句查询这个数据库  例如这个SELECT语句
SQL against this database, such as the SELECT statement here, which returns

39
00:03:04,080 --> 00:03:07,650
它能返回指定日期的天气  类似  如果我们想知道详细的信息
the weather on the specified date, similar to what we'll want to do for

40
00:03:07,650 --> 00:03:12,670
我们可以用稍微复杂点的查询语句返回一个日期区间的数据
the Detail view. We can use a slightly more complex query to return a range of

41
00:03:12,670 --> 00:03:16,730
就好像我们做预报ListView时做的一样
dates, which is similar to what we do on the main forecast ListView.

