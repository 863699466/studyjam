1
00:00:00,400 --> 00:00:02,220
好的，你已经完成了
All right, you're done.

2
00:00:02,220 --> 00:00:04,130
看一下现在的情况
Let's take a look at the solution.

3
00:00:04,130 --> 00:00:07,330
增加了对插入位置的支持，看起来就像
Adding support for the location
insert looks almost identical

4
00:00:07,330 --> 00:00:09,100
增加了对weather的支持一样
to adding the support for weather.

5
00:00:09,100 --> 00:00:14,620
我们只需要选择正确的表名，然后返回一个正确的位置URI
We just have to select the right table
name, and return the right location URI.

6
00:00:14,620 --> 00:00:18,570
记住，在函数的最后，我们要调用getcontentresolver里的notifychange这个函数
Remember, at the end of the function,
we can just call notify change on

7
00:00:18,570 --> 00:00:21,584
去通知所有的注册的观察者
the content resolver to notify
all of the registered observers.

8
00:00:22,780 --> 00:00:27,210
注意到我们必须使用URI路径而不是返回URI
Note that we must use the past in URI,
and not the return URI,

9
00:00:27,210 --> 00:00:30,540
因为它不会正确的通知我们游标的变化
as that will not correctly notify
our cursors of the change.

10
00:00:30,540 --> 00:00:33,980
由于我们取消了testInsertreadProvider函数的注释
Since we also uncommented
test insert read provider,

11
00:00:33,980 --> 00:00:37,910
让我们运行一下测试，确保一切都是可以用的
lets run our test just to make sure
everything's still working well.

12
00:00:37,910 --> 00:00:39,820
没有什么错误显示在设备的屏幕上
Note that nothing appears
on device screen.

13
00:00:41,000 --> 00:00:42,420
嗯，我们的测试通过了
And, our test passed.

14
00:00:42,420 --> 00:00:44,850
我们在content provider的道路上越走越顺了
We're well on our way to
building our content provider.

