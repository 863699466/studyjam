1
00:00:00,350 --> 00:00:01,040
好吧
All right.

2
00:00:01,040 --> 00:00:01,800
你已经搞定了
You're done.

3
00:00:01,800 --> 00:00:04,570
接下来我们讲讲我是如何解决这个问题的。
Let's talk about how I solved this one.

4
00:00:04,570 --> 00:00:07,370
我们先返回来看看你刚刚写的service代码
Let's take a look at the sunshine
service you just wrote.

5
00:00:07,370 --> 00:00:12,440
首先，我们需要一些常量，如LOG_TAG
To begin with, it's useful to have
some constants, a log tag, so

6
00:00:12,440 --> 00:00:14,840
这样我们就知道它是如何工作的了
we can actually see
how it's functioning.

7
00:00:14,840 --> 00:00:18,860
然后是这个LOCATION_QUERY_EXTRA
And most importantly,
this location query extra.

8
00:00:18,860 --> 00:00:23,540
我们通过这个LOCATION_QUERY_EXTRA
We use this location query extra
to pass the location query.

9
00:00:23,540 --> 00:00:25,330
在我们的Intents Service中传递地点请求数据
Into our Intents service.

10
00:00:25,330 --> 00:00:30,030
我们把从fetchWeatherTask的doInBackground方法中
In onHandleIntent, we actually put
the code that we had in do in background

11
00:00:30,030 --> 00:00:31,882
提取的代码放到onHandleIntent中。
in our fetch weather task.

12
00:00:31,882 --> 00:00:35,150
但你也能发现我们唯一所能得到的参数只是一个intent
However, as you can see the only
parameter we get is an intent.

13
00:00:35,150 --> 00:00:38,080
这里通过stringExtra将地点请求数据提取出来
So we pull the location
query out of a stringExtra.

14
00:00:38,080 --> 00:00:40,780
这里就用到了Location_Query_Extra字符串
Using the location query extra string.

15
00:00:40,780 --> 00:00:43,780
我们从fetchWeatherTask中把其它代码拷贝出来
We can copy the rest of the code
from fetch weather task here

16
00:00:43,780 --> 00:00:46,780
因为Intent Service也能创建一个helper线程来执行代码
because intent service also
creates a helper thread for

17
00:00:46,780 --> 00:00:50,240
这个功能和AsyncTask所做的类似
us to run code on,
similar to what async task does.

18
00:00:50,240 --> 00:00:54,180
注意我们也要处理所有和mContext相关的代码
Note that we also fix up all of
the code that refers to m context.

19
00:00:54,180 --> 00:00:57,080
作为服务，它也有自己的上下文（Context）
As a service, also has its own context.

20
00:00:57,080 --> 00:01:01,170
最后我们需要从forecast fragment中的updateWeather
The final thing we do,
is call our service from update weather,

21
00:01:01,170 --> 00:01:02,520
调用我们的服务
with in forecast fragment.

22
00:01:03,520 --> 00:01:04,720
我们把地点请求作为extra来处理
We simply put an extra for

23
00:01:04,720 --> 00:01:08,180
而不是作为参数来传递
the location query,
instead of using it as a parameter.

24
00:01:08,180 --> 00:01:09,700
然后启动服务
And then start the service.

25
00:01:09,700 --> 00:01:13,250
然后删掉fetchWeatherTask,以及和它相关的代码
Then we can delete the fetch weather
task, and its associated test.

