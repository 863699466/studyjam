1
00:00:00,270 --> 00:00:02,719
让我们从在这个内容提供者中看一下
Let's take the look at the implementation, of an optional method,

2
00:00:02,719 --> 00:00:04,939
这个可选方法的实现
we've got in the content provider.

3
00:00:04,939 --> 00:00:07,220
凡是用SQLite工作过的人都知道
Anyone out there who has done work with SQLite,

4
00:00:07,220 --> 00:00:10,430
将一串数据一起插入到单独的事务
knows that putting a bunch of inserts into a single transaction is

5
00:00:10,430 --> 00:00:13,040
比单独插入要快得多
much faster than inserting them individually.

6
00:00:13,040 --> 00:00:15,100
BulkInsert允许我们这样做
BulkInsert allows us to do that.

7
00:00:15,100 --> 00:00:18,900
这个默认的实现  只是插入一串时间
The default implementation, just calls insert a bunch of times.

8
00:00:18,900 --> 00:00:22,520
但是  我们可以把它在事务中打包  如果我们自己实现这个接口
But, we can wrap it in a transaction, if we implement it ourselves.

9
00:00:22,520 --> 00:00:26,270
请记住我们在这里只是添加了一个天气预报事务的支持
Note that we've only added support for weather forecast transactions here,

10
00:00:26,270 --> 00:00:28,930
因为这些事务是我们唯一将要插入到bulk中的
since they are the only ones we insert in bulk.

11
00:00:28,930 --> 00:00:32,320
我们从调用db.beginTransaction开始
We start by calling db.beginTransaction.

12
00:00:32,320 --> 00:00:36,860
循环遍历ContentValue  插入和更新
For each of the content values passed in, we insert and

13
00:00:36,860 --> 00:00:39,190
我们插入的记录的数量
update the number of records inserted.

14
00:00:39,190 --> 00:00:42,770
当我们完成  我们设置这个事务为成功
When we're done, we set the transaction to be successful.

15
00:00:42,770 --> 00:00:46,092
然后我们靠这个最终状态来执行endTransaction
And then rely on the finally statement endTransaction.

16
00:00:46,092 --> 00:00:49,140
请注意  如果我们不将这个事务设置为成功
Note, that if we do not set the transaction to be successful,

17
00:00:49,140 --> 00:00:52,460
当我们调用endTransaction的时候这些记录将不会被提交
the records will not be committed when we call endTransaction.
