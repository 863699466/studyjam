1
00:00:00,560 --> 00:00:04,330
既然我们已经在Android manifest.xml中同步了weather provider进程
Now that we've registered our weather provider in the Android manifest,

2
00:00:04,330 --> 00:00:06,820
我们就可以来编写天气插件了
it's time to begin coding our weather provider.

3
00:00:08,020 --> 00:00:12,890
这是实现内容提供的过程中最终也是最关键的一步
This is the final and most involved step in implementing our content provider.

4
00:00:12,890 --> 00:00:17,018
我们即将着手完成内容提供的核心功能
We'll be filling out these core content provider functions.

5
00:00:17,018 --> 00:00:20,040
除了我们已经完成的onCreate函数
Except for onCreate, which we've already done for

6
00:00:20,040 --> 00:00:24,220
我们也已经为数据库助手添加了实例变量
you, we've added an instance variable for our data base helper.

7
00:00:24,220 --> 00:00:26,460
我们在onCreate中初始化上述功能
We initialize this in our onCreate function.

8
00:00:26,460 --> 00:00:31,050
并会在大部分的内容提供方法下使用数据库助手
We will use this database helper in most of the content provider methods.

9
00:00:31,050 --> 00:00:34,980
我们先来看看内容提供方法里的getType方法
The first of the content provider methods that we will look at is getType.

10
00:00:34,980 --> 00:00:38,960
对我们的app来说实现getType的功能版本
Implementing the functional version of getType isn't strictly necessary for

11
00:00:38,960 --> 00:00:40,490
并非严格需要
our application.

12
00:00:40,490 --> 00:00:44,200
但这是一个非常好的方法来回顾我们即将着手的URI
But it's a nice way to review what uris we're planning to handle.

13
00:00:44,200 --> 00:00:47,540
我们已经完成了部分getType的功能
We partially filled out the getType function for you.

14
00:00:47,540 --> 00:00:51,820
我们使用之前建立的urimatchr工具类来匹配传入的uri
We use the urimatcher we built earlier to match the given uri

15
00:00:51,820 --> 00:00:54,690
这和之前所做的是不同的
against the expressions we've compiled in.

16
00:00:54,690 --> 00:00:58,580
每次匹配都会返回在WeatherContract中定义的类型
For each match, we return the types that we've defined in the weather contract.

17
00:00:58,580 --> 00:01:02,560
谨记  要传达的关键信息是content uri是否
Remember that the key information that this conveys, is weather the content uri

18
00:01:02,560 --> 00:01:07,560
返回一个包含单一记录的item类型的数据库cursor
will be returning a database cursor containing a single record type item, or

19
00:01:07,560 --> 00:01:10,200
还是包含多个记录的directory类型
multiple records type directory.

20
00:01:10,200 --> 00:01:13,420
除了数据库cursor  内容提供商也可以用来返回
Content providers can also be used to return other kinds of data

21
00:01:13,420 --> 00:01:15,410
其他类型的数据
than just database cursors.

22
00:01:15,410 --> 00:01:19,590
比如说  如果我们想要内容提供商以content uri返回一个JEPG图像
For example, if we wanted the content provider to return JPEG images for

23
00:01:19,590 --> 00:01:24,114
我们应该用这个函数返回标准的mime类型
a content uri, we would have this function return the standard mime type,

24
00:01:24,114 --> 00:01:26,430
即image/jpeg
image/jpeg.

25
00:01:26,430 --> 00:01:31,220
接下来我们来谈谈TestProvider中testGetType方法
Let's un comment the testGetType test from within TestProvider.

26
00:01:31,220 --> 00:01:33,660
这为我们接下来的工作做了准备
This will get us ready for the next coding exercise.

