1
00:00:00,270 --> 00:00:04,740
接下来我们来构建UI  首先从构造MainActivity的框架开始
To build out our UI, let's start with the wire frames for the main activity.

2
00:00:04,740 --> 00:00:09,000
主界面显示了一个预报列表  里面的每个元素都包含一个图标
It displays a list of forecasts where each item contains an icon,

3
00:00:09,000 --> 00:00:14,630
一个日期  天气描述  还有当天的最高温和最低温
a date, weather description, as well as high and low temperatures for that day.

4
00:00:14,630 --> 00:00:18,190
由于今天的天气对于用户来说是最重要的
Since today's weather is probably most relevant to the user,.

5
00:00:18,190 --> 00:00:22,036
所以和其他日期的数据相比我们更加凸显它的位置
We give more prominence to it as the list item compared to the other dates.

6
00:00:22,036 --> 00:00:25,277
我们首先构造显示未来日期的天气的列表布局
We'll start off by building the list item layout for future dates because

7
00:00:25,277 --> 00:00:29,030
因为它们相对来说比较简单  然后再返回来完成“今天天气”的布局
it's simpler and then afterwards we'll come back to do the today layout.

8
00:00:29,030 --> 00:00:33,130
在forecastLayout的xml文件中  目前的实现是
In the current implementation the list item forecast layout xml.

9
00:00:33,130 --> 00:00:36,090
水平的LinearLayout  里面包含了4个TextView
Is a horizontal, linear layout of four text views.

10
00:00:36,090 --> 00:00:39,480
我们要修改布局  使它能像这个框架一样
We'll need to modify the layout so that it looks like this wire frame.

11
00:00:39,480 --> 00:00:40,110
我们要将布局
We should divide and

12
00:00:40,110 --> 00:00:43,590
拆分成更为基本的元素  拆分到我们能够用所熟悉的布局实现为止
conquer until we can use the view group layouts that we're familiar with.

13
00:00:43,590 --> 00:00:46,480
你能想象将UI拆分成你能够简单实现的小模块的
Can you imagine how you'd break down this UI into components that you

14
00:00:46,480 --> 00:00:47,129
感觉吗？
know how to build?

15
00:00:48,680 --> 00:00:51,840
给个提示  我要是在这加个分隔怎么样呢？
As a hint, what if I draw these separators here?

16
00:00:51,840 --> 00:00:54,690
对于这里面的元素  你能找到方法用熟悉的View Group
Within those elements, can you find a way to break it down

17
00:00:54,690 --> 00:00:57,540
将其进一步拆分吗
even further with view groups you're familiar with?

18
00:00:57,540 --> 00:01:00,270
你需要用到多层viewgroup  也就是ViewGroup里面
You'll need nested view groups which means view groups

19
00:01:00,270 --> 00:01:02,170
包含着ViewGroup
with children view groups.

20
00:01:02,170 --> 00:01:06,050
顺带说一句  用下面的指导信息来命名View ID  这样你的代码
By the way, use the view id names that we provide in the instructor notes below

21
00:01:06,050 --> 00:01:07,770
就能和我们一致了
so that your code will match ours.

22
00:01:07,770 --> 00:01:10,510
要验证布局的实现是否正确  在控件属性中
To verify that the layout is being built correctly,

23
00:01:10,510 --> 00:01:13,280
加一些文本数据
hard code some text values into the fields.

24
00:01:13,280 --> 00:01:17,200
比如date设置为“tomorrow”  weatherCondition设置为“Clear”
Such as tomorrow for the date, or clear for the weather condition.

25
00:01:17,200 --> 00:01:21,320
对于图片  我们可以用ic_launcher作为示例图片
For images, we can specify a placeholder drawable called ic_launcher.

26
00:01:21,320 --> 00:01:25,030
它是启动时用到的图标
It's named this way because it's the launcher icon.

27
00:01:25,030 --> 00:01:28,650
而且也是程序在菜单里显示的图标  并且已经包含在程序源码中了
Which is also known as the app icon and this is already included in our app.

28
00:01:28,650 --> 00:01:31,235
在课程后面的部分  我们会获得其他的
We'll be getting to the rest of the weather icons for

29
00:01:31,235 --> 00:01:33,060
天气图标
our app later in this lesson.

30
00:01:33,060 --> 00:01:35,020
如果你想知道布局是什么样的
If you want to see what this layout looks like,

31
00:01:35,020 --> 00:01:37,910
你可以点击design窗格来进行预览
you can click on the design pane to see a preview of it.

32
00:01:37,910 --> 00:01:41,060
在右侧我们能看到一个树形列表包含了各种各样的view
On the right we see a component tree listing out the different views.

33
00:01:41,060 --> 00:01:45,100
同时我们还能看到View的属性有哪些  对应的值是什么
We can also see for a given view what the properties are and their values.

34
00:01:45,100 --> 00:01:48,130
我们还能调整预览设备的屏幕方向
We can change the orientation of the device that you're previewing.

35
00:01:48,130 --> 00:01:52,900
你也可以选择不同的设备  比如Nexus7 或者Nexus 10
You can also select different devices, such as Nexus 7 or Nexus 10.

36
00:01:52,900 --> 00:01:56,240
你也可以同时预览不同屏幕大小的效果
You can also preview multiple devices at the same time.

37
00:01:56,240 --> 00:01:59,570
这个任务你仅仅是构建布局  所以不要担心字体颜色
As you build out your layout for this task, don't worry about the font color

38
00:01:59,570 --> 00:02:02,680
字体大小或者其他显示细节的问题
or font size, or any other visual details until later.

39
00:02:03,690 --> 00:02:06,970
当你编译运行时  程序应该是这样的
After you compile and run, the app should look something like this.

40
00:02:06,970 --> 00:02:09,680
每个列表项的数据是相同的
Every list item has the same dummy data.

41
00:02:09,680 --> 00:02:10,889
当你改变布局时
When you change the layout,

42
00:02:10,889 --> 00:02:15,280
它会崩溃因为你之前的代码默认认为每个列表项
it will actually cause a crash in your app because your code previously assumed

43
00:02:15,280 --> 00:02:18,320
只有一个TextView
that this list item layout only had one text view.

44
00:02:18,320 --> 00:02:21,240
所以接下来你需要转向ForecastAdapter.java文件
So you'll need to go to the ForecastAdapter.java file.

45
00:02:21,240 --> 00:02:23,840
将bindview方法里的代码注释掉
And comment out the lines of code in the bindview method.

46
00:02:23,840 --> 00:02:26,520
在后面的视频中我们会解决这个问题
We're going to fix this method in a later video.
