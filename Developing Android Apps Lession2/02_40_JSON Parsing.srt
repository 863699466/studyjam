1
00:00:00,430 --> 00:00:03,490
当你学会了如何解析 JSON 数据的时候  就可以很简单地
Once you've learned how to parse JSON data, it's pretty straightforward to

2
00:00:03,490 --> 00:00:06,370
解析出我们需要的其它字段
be able to parse the rest of the fields that we need.

3
00:00:06,370 --> 00:00:08,109
因为这不是一个关于 Java 或 JSON 的课程
Since this isn't a course on Java or

4
00:00:08,109 --> 00:00:12,470
我们将给你列出解析代码的要点
JSON, we're going to provide you with the parsing code in the gist below.

5
00:00:12,470 --> 00:00:14,280
这就是主要的代码了
And this is what the gist looks like.

6
00:00:14,280 --> 00:00:16,070
这里有三个辅助方法
There are three helper methods.

7
00:00:16,070 --> 00:00:18,430
第一个用来得到格式化日期
The first is for formatting dates.

8
00:00:18,430 --> 00:00:20,640
第二个用来处理温度的舍入
The second is for rounding temperatures.

9
00:00:20,640 --> 00:00:25,450
第三个将天气预报的 JSON 字符串存入预报的队列中
The third is returning a forecast JSON string into an array of forecasts.

10
00:00:25,450 --> 00:00:29,960
这个方法还将日期与每个预报记录对应起来
This method also handles associating a date with each forecast entry.

11
00:00:29,960 --> 00:00:33,930
我们从当前日期开始  每增加一天就加一
We start with a current date, and we increment one for each successive day.

12
00:00:33,930 --> 00:00:36,750
注意 我们使用了儒略历日期
Notice that we also use Julian dates, which is the number of

13
00:00:36,750 --> 00:00:39,570
这是自从儒略时代（凯撒统治罗马的时期）开始至今的总天数
days that have passed since the beginning of the Julian period.

14
00:00:39,570 --> 00:00:41,813
关于儒略历在讲义中有更多的信息  但是
More information is in the instructor notes below, but

15
00:00:41,813 --> 00:00:44,400
这就是我们的应用能始终如一地处理日期的原因
it's how we'll consistently deal with dates in our app.

16
00:00:44,400 --> 00:00:47,550
这样一来  在比较日期时  我们不必担心
That way, when comparing dates, we don't have to worry about taking into

17
00:00:47,550 --> 00:00:50,760
时区或是夏令时
account time zones or daylight savings time.

18
00:00:50,760 --> 00:00:54,040
使用这些辅助函数来更新获取天气预报的任务
Update the fetch weather tasks to use these helper functions and

19
00:00:54,040 --> 00:00:57,890
doInBackground方法应该返回一个天气预报的字符串数组
the doInBackground method should return a string array of forecasts.

20
00:00:57,890 --> 00:01:00,750
你可以把输出记录下来 从而检查数组的正确性
You can log the output to check that the array is correct.

21
00:01:00,750 --> 00:01:03,150
某天的天气预报格式是这样的
The format of one day's forecast should look like this.
