1
00:00:00,900 --> 00:00:04,400
你可能注意到了  当你在应用之间切换的时候
As you are moving around between apps, you probably notice that from a user

2
00:00:04,400 --> 00:00:08,670
Android并不会让用户感觉到应用状态的变化  Android不会通知用户
perspective, Android doesn't announce changes in app state. It doesn't announce,

3
00:00:08,670 --> 00:00:12,890
现在内存不足  并要求用户关闭应用以释放一些内存
that it's low in memory or ask users to close apps, to free up resources. In

4
00:00:12,890 --> 00:00:17,010
事实上  当设备的资源不足时  Android自己完成了所有的所需的操作
fact, it does everything it can, to make the resource limitation to the device,

5
00:00:17,010 --> 00:00:21,800
而这些操作对用户是透明的  这意味着  为了使前台的应用正常运行
invisible to the user. That means keeping the foreground app running smoothly,

6
00:00:21,800 --> 00:00:25,100
并且能在各个应用之间无缝的切换  当发生资源不足时
and switching between apps seamless, and that means killing apps in

7
00:00:25,100 --> 00:00:30,420
Android会杀掉后台的应用
the background. And it does that if it

8
00:00:30,420 --> 00:00:34,690
来释放他们所占用的资源给前台应用
needs their resources to make sure that the foreground apps can continue to run.

9
00:00:34,690 --> 00:00:38,080
所以  当你的应用不可见时
So we know that as soon as your app isn't visible, its lifetime is as

10
00:00:38,080 --> 00:00:41,810
它的生命周期随时都可能被系统消无声息的终结
perilous as that of a Stark at the Red Wedding. Likely to die without notice,

11
00:00:41,810 --> 00:00:46,670
也随时准备着回到前台重新活跃
but ready to return from the dead. That tells us some very important things

12
00:00:46,670 --> 00:00:50,140
这些告诉我们如何使我们的应用很好的适应Android系统  并且给用户提供良好的体验
about how our app should behave to be good citizens and provide a great user

13
00:00:50,140 --> 00:00:54,600
从系统的角度来看  处于暂停和停止的应用
experience. From a system perspective, on pause and on stop are signals that our

14
00:00:54,600 --> 00:00:57,990
随时都可以被终止  所以我们必须要在进入这些状态时  按照顺序作必要的剥离工作
app may be killed eminently. So we need to clean up any resources that

15
00:00:57,990 --> 00:01:01,990
例如关闭打开的连接或套接字
need an orderly tear down such as closing any open connections or sockets.

