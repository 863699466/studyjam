1
00:00:00,603 --> 00:00:05,130
你是对的  Android会将你的数据保存到文件系统中
As you might expect, Android stores your persistent data in the file system.

2
00:00:05,130 --> 00:00:09,172
为了便于开发者的工作  Android在文件系统之上
To simplify what app developers need to write, Android provides

3
00:00:09,172 --> 00:00:13,077
提供了几种结构化的存储选项
several structured storage options on top of the file system.

4
00:00:13,077 --> 00:00:19,253
我们来详细讨论一下SharedPreferences和SQLite数据库
For Sunshine, we'll leverage both Shared Preferences and an SQLite Database.

5
00:00:19,253 --> 00:00:21,690
下面让我们看一下
Let's look at both of these options.

6
00:00:21,690 --> 00:00:26,864
我们之前存储用户邮编的SharedPreferences类
The Shared Preferences class, which we are already using to store our user

7
00:00:26,864 --> 00:00:32,036
提供了一种存储和查询基础数据类型
zip code in units, provides a general framework that allows you to save and

8
00:00:32,036 --> 00:00:36,390
键值对的通用框架
retrieve persistent key value pairs of primitive data types,

9
00:00:36,390 --> 00:00:40,192
这里的基础数据类型包括布尔型  整型  长整型和字符串等
such as Booleans, floats, ins, longs and strings.

10
00:00:40,192 --> 00:00:44,416
不过有些时候像SharedPreferences这样简单的键值对框架
There are times when a simple key value pair framework like Shared Preferences

11
00:00:44,416 --> 00:00:46,601
无法提供足够的灵活性
doesn't provide enough flexibility.

12
00:00:46,601 --> 00:00:50,210
幸运地是  Android还有SQLite数据库
Fortunately, Android also has SQLite.

13
00:00:50,210 --> 00:00:54,181
SQLite数据库是一种轻量级的关系型数据库
SQLite implements a light weight relational database.

14
00:00:54,181 --> 00:00:57,804
我们通过写查询方法  其它的方法
We interact with SQLite databases by writing queries and

15
00:00:57,804 --> 00:01:02,644
或者SQL语句与SQLite数据库进行交互
statements and SQLite's variant of the structured query language or SQL.

16
00:01:02,644 --> 00:01:05,867
在数据库中存储数据比使用SharedPreferences
Storing something in a a database is more complicated than using

17
00:01:05,867 --> 00:01:07,008
要更加复杂
Shared Preferences.

18
00:01:07,008 --> 00:01:09,366
那为什么还要使用数据库呢
So why would we ever choose this option?

19
00:01:09,366 --> 00:01:12,956
毕竟  Android支持原始文件存储
After all, Android supports both raw files and

20
00:01:12,956 --> 00:01:15,926
可以作为替代
shared preferences as alternatives.

21
00:01:15,926 --> 00:01:20,100
好吧  这和你无法从地板上的一大堆衣服中快速地
Well, for the same reason that it's inefficient to find things if you

22
00:01:20,100 --> 00:01:22,588
找到你想要的衣服的道理是一样的
throw your clothes in a pile on the floor.

23
00:01:22,588 --> 00:01:27,996
在SQLite数据库中存储数据可以帮助你更简单地组织和查询数据
Storing things in an SQLite Database helps you organize and find data easily.

24
00:01:27,996 --> 00:01:30,064
这多亏了索引和表
Thanks to the power of indexing and tables.

25
00:01:30,064 --> 00:01:32,583
让我们看看究竟是怎么回事
Let's see what this looks like.

26
00:01:32,583 --> 00:01:36,484
这是天气数据库中的一张表
Here is an SQLite Database table from our weather database.

27
00:01:36,484 --> 00:01:38,689
注意我们没有展示所有的属性
Note not all fields are represented.

28
00:01:38,689 --> 00:01:41,788
第一天的所有数据在第一行
All of the data for the first day is in the first row.

29
00:01:41,788 --> 00:01:45,666
第二天的所有数据在第二行  以此类推
The data for the second day is in the second row and so on.

30
00:01:45,666 --> 00:01:46,989
如果用键值对的话
With key valued pairs,

31
00:01:46,989 --> 00:01:50,171
是很难组织这样的一行数据的
it would be difficult to associate a row of data this way.

32
00:01:50,171 --> 00:01:54,583
随着后面对Android中数据库的继续学习
As you continue through this section on database storage and Android.

33
00:01:54,583 --> 00:01:58,656
我们将会对SQLite数据库和关系型数据库有一些基本的理解
We're going to expect some basic understanding of SQLite and

34
00:01:58,656 --> 00:02:02,649
包括创建  查找  更新  删除  插入
relational databases, including what a create, select,

35
00:02:02,649 --> 00:02:05,484
这些操作的意思
update, delete and insert operation is.

36
00:02:05,484 --> 00:02:07,725
我们将帮助你写这些操作的代码
We'll help you write these operations.

37
00:02:07,725 --> 00:02:10,606
不过如果你从来没使用过SQLite或者需要复习一下
But if you are new to SQLite or need a refresher,

38
00:02:10,606 --> 00:02:14,505
去SQLite教程看看  链接在下面的帮助指南中
head over to the tutorial linked in the instructor notes below.

39
00:02:14,505 --> 00:02:17,662
一旦我们在应用中创建好了数据库  并运行在设备上
Once we have a database up and running on our device for our app.

40
00:02:17,662 --> 00:02:20,982
使用SQL语句获取我们想要的信息是很简单的
Getting the information we need using SQL is easy.

41
00:02:20,982 --> 00:02:24,734
我们可以对这个数据库进行查询操作  比如这里的SELECT语句
We can perform queries against this database, such as this SELECT statement

42
00:02:24,734 --> 00:02:27,519
它会返回特定日期的天气数据
here, which returns the weather on the specified date.

43
00:02:27,519 --> 00:02:30,363
在天气详情页面我们可能会需要这样的数据
Similar to what we would want to do for the detail view.

44
00:02:30,363 --> 00:02:34,611
我们还可以使用稍微复杂一些的查询来返回一个时间段的天气信息
We can use this slightly more complex query to return a range of dates,

45
00:02:34,611 --> 00:02:38,506
我们在天气预报列表页面应该会需要这样的数据
which is similar to what we'd do on the main forecast list view.

46
00:02:38,506 --> 00:02:42,566
重申一遍  如果你对任何一点不熟悉  你可以
Once again, if any of this was unfamiliar, please consider working

47
00:02:42,566 --> 00:02:46,076
查看SQLite教程  帮助指南中有链接
through the SQLite tutorial link in the instructor notes.

48
00:02:46,076 --> 00:02:49,897
就算没有问题  你也可以学到一些东西
And even if isn't unfamiliar, you might just learn something.

49
00:02:49,897 --> 00:02:50,684
好的
Okay.

50
00:02:50,684 --> 00:02:53,704
这里有一个更加复杂一些的SQL查询语句
Here's a slightly more complicated SQL query.

51
00:02:53,704 --> 00:02:55,192
从帮助指南中看看有没有
See the instructor notes for

52
00:02:55,192 --> 00:02:58,545
你可以使用到的东西来帮助你解析这个SQL语句
some resources that you can use to help parse the SQL statement.

53
00:02:58,545 --> 00:03:03,362
看看第一个  max是一天中最高温的那一栏
One note, max is the name of the column that stores the high temperature for

54
00:03:03,362 --> 00:03:03,980
的属性名称
the day.
