1
00:00:00,170 --> 00:00:02,516
在Forecast Fragment类里，
In the Forecast Fragment class, we add the callback

2
00:00:02,516 --> 00:00:06,020
我们添加一个要点里列出的回调函数。然后在onCreateView的方法中
that was provided in the gist. Then in the onCreateView

3
00:00:06,020 --> 00:00:09,200
我们修改表项被点击的操作。 当一个项目被
method, we modify the item click behavior. When an

4
00:00:09,200 --> 00:00:11,660
点击之后，将Cursor移动至那个所点击 的位置，
item is clicked, we move the cursor to that position

5
00:00:11,660 --> 00:00:14,060
来读取字符串数据。我们
and then we read out the date string. We

6
00:00:14,060 --> 00:00:17,300
调用getActivity方法，并且把它类型转换为Callback对象
call getActivity and then we cast it to a Callback

7
00:00:17,300 --> 00:00:20,410
然后我们调用onItemSelected方法，并将日期字符作为参数传递。
object. And then we call onItemSelected, with that date

8
00:00:20,410 --> 00:00:25,450
然后在MainActivity中，我们实现回调函数的代码。
string. Then in the MainActivity, we implement this Callback interface.

9
00:00:25,450 --> 00:00:28,700
在onItemSelected方法中，
In the onItemSelected method, we fork behavior based on

10
00:00:28,700 --> 00:00:31,530
我们根据之前定义的TwoPane的值来决定接下来的操作。如果我们是在双
the TwoPane variable that we defined earlier. If we're

11
00:00:31,530 --> 00:00:34,650
面板状态中，我们需要创建一个新的DetailFragment
in TwoPane mode, then we create a new DetailFragment

12
00:00:34,650 --> 00:00:37,180
来使用arguments bundle的日 期数据。 然后我们
using the date in the arguments bundle. And then

13
00:00:37,180 --> 00:00:41,420
用weather_detail_container替换已经有的fragment。不过，
we replace the existing fragment in the weather_detail_container. Otherwise,

14
00:00:41,420 --> 00:00:43,900
在单面板状态中，我们需要创建一个新的意向来
in OnePane mode, we create a new intent to

15
00:00:43,900 --> 00:00:46,500
启动detail activity，并把日期数据放到Intent Extra里
launch the detail activity setting the date as an

16
00:00:46,500 --> 00:00:50,720
。在detail activity里，需要修改一下onCreate方法，
intent extra. In the detail activity, we modify the onCreate

17
00:00:50,720 --> 00:00:53,950
目的是来读取从main activity传入的intent数据
method to read the intent extras from the intent that

18
00:00:53,950 --> 00:00:56,840
我们把这些日期数据放入bundle中，
came from the main activity. We take this date and set

19
00:00:56,840 --> 00:00:59,700
用这个bundle来初始化detail fragment
it in the arguments bundle to initialize the detail fragment.

20
00:00:59,700 --> 00:01:03,500
同时将detail fragment动态的加入进这个容器内。在
And we dynamically add the detail fragment to this container. In

21
00:01:03,500 --> 00:01:06,730
detail fragment中，修改onCreateLoader方法
the detail fragment, we modify the on create loader method

22
00:01:06,730 --> 00:01:09,710
来读取那些传入的参数。我们使用
to read from the arguments that were passed in. We get

23
00:01:09,710 --> 00:01:12,270
日期的字符串并且用它
the date string out and use it with the location

24
00:01:12,270 --> 00:01:15,760
和地点字符串一起组成一个URI来请求Content provider。
string to build up the Uri to query the content provider.

25
00:01:15,760 --> 00:01:18,790
我们还需要移除一些对于传入Intent的依赖。
We also remove any reliance on the incoming intent.

26
00:01:18,790 --> 00:01:21,480
使用一个arguments bundle来替代它。举个例子
We switch it to use the arguments bundle, instead. For

27
00:01:21,480 --> 00:01:25,220
在onActivityCreated方法中，只有在参数不为空时
example, in the onActivityCreated method, we only initialize the loader

28
00:01:25,220 --> 00:01:28,620
我们才会初始化loader。在 onResume 方法中，
if the arguments is not null. In the onResume method,

29
00:01:28,620 --> 00:01:31,060
我们也需要修改一些条件，这样程序会检查这个
we also modify the condition so that it checks that

30
00:01:31,060 --> 00:01:34,520
bundle是不是空。 当你在平板上
the arguments bundle is not null. When you try it

31
00:01:34,520 --> 00:01:36,990
测试的时候，会出现一个页面导航相关的bug
out on the tablet, there is one bug related to

32
00:01:36,990 --> 00:01:40,810
比如我们选择了未来的日期
navigation that we should fix. Say we select tomorrows date.

33
00:01:40,810 --> 00:01:43,210
如果你转向设置页面
If you navigate to the settings activity and then hit

34
00:01:43,210 --> 00:01:46,980
然后点击向上的按键，detail fragment就变成空白的。 这是因为
the up button, the detail fragment is blank. That's because

35
00:01:46,980 --> 00:01:49,840
系统重新实例化了一个main activity
a brand new instance of main activity got launched and

36
00:01:49,840 --> 00:01:52,880
而在新的实例中，我们什么都没选择。 
for a brand new instance, nothing is selected yet. To fix

37
00:01:52,880 --> 00:01:56,170
要解决这个bug，在设置页面的上键被按下之后，
this, when the settings activity up button is pressed, we

38
00:01:56,170 --> 00:01:58,690
必须要把之前运行的main activity实例找出来
want to navigate to the previous running instance of the

39
00:01:58,690 --> 00:02:02,370
找出来，而且这时选择了未来的事件。而不去
main activity, where the tomorrow item is selected. And not

40
00:02:02,370 --> 00:02:06,600
创建一个新的main activity实例。 在设置页面里，
create a new instance of main activity. In the settings activity,

41
00:02:06,600 --> 00:02:09,620
重写这个方法。系统通过调用这个方法，
overwrite this method. Which the system will call in

42
00:02:09,620 --> 00:02:12,430
来获得上一级activity的intent来响应上按键的操作。
order to get the parent activity intent for the up

43
00:02:12,430 --> 00:02:15,310
当我们拿到父activiyt的Intent后
button behaviour. Get the parent activity intent from the

44
00:02:15,310 --> 00:02:18,160
它会在main activity中创建一个新的
super class, this should create a new intent to main

45
00:02:18,160 --> 00:02:23,500
Intent。然后加入一个意向标志，叫做 FLAG_ACTIVITY_CLEAR_TOP。
activity. Then add the intent flag, called FLAG_ACTIVITY_CLEAR_TOP. This

46
00:02:23,500 --> 00:02:26,080
这个标志会告诉我们main activity是否已经在我们
flag indicates that we should check if the main activity

47
00:02:26,080 --> 00:02:28,400
的任务中运行。我们要使用这个
is already running in our task. And to use

48
00:02:28,400 --> 00:02:31,890
标志，来避免必须要创建一个新的活动实例外。
that one, instead of creating a new main activity instance.

49
00:02:31,890 --> 00:02:34,730
同时这个方法不能在Jelly Bean之前安卓系统上使用。所以我们
Also, this method didn't exist prior to jelly bean, so we need

50
00:02:34,730 --> 00:02:39,120
需要在目标API里加入这个声明。所以如果你已经查找了一些关于
to add this at target API annotation. If you check the documentation

51
00:02:39,120 --> 00:02:44,240
activity类的文档，getParentActivityIntent 方法仅有在API 16级之后才被加入。
for the activity class, the getParentActivityIntent method was only added in API

52
00:02:44,240 --> 00:02:48,110
你可以在16版本中的找到该方法。
level 16. And you can check that version 16 maps to jelly bean.

